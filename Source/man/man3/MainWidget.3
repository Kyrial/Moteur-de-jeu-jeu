.TH "MainWidget" 3 "Mercredi 12 Janvier 2022" "Moteur De Jeu" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MainWidget \- la classe \fBMainWidget\fP est la classe principale qui contiens le graphe de scène et initialise la confiture  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <mainwidget\&.h>\fP
.PP
Est dérivée de QOpenGLWidget, et QOpenGLFunctions_4_1_Core\&.
.SS "Connecteurs publics"

.in +1c
.ti -1c
.RI "void \fBcameraControle\fP ()"
.br
.ti -1c
.RI "void \fBkeyPress\fP (QKeyEvent *e)"
.br
.RI "envois le signal \fBemitFilter()\fP "
.in -1c
.SS "Signaux"

.in +1c
.ti -1c
.RI "void \fBsignalKeyPress\fP (QKeyEvent *e)"
.br
.RI "envois un signal lorsqu'une touche est préssée "
.ti -1c
.RI "void \fBprojectionChanged\fP (QMatrix4x4 val)"
.br
.RI "projectionChanged : c'est un signal qui avertit le slot connécté que la projection a changé "
.ti -1c
.RI "void \fBemitFilter\fP (QEvent *event)"
.br
.RI "emitFilter : signal qui avertit qu'une touche à été préssé ou relaché "
.in -1c
.SS "Fonctions membres publiques"

.in +1c
.ti -1c
.RI "\fBMainWidget\fP (QWidget *parent=0)"
.br
.RI "Constructeur\&. "
.ti -1c
.RI "\fBMainWidget\fP (int fps)"
.br
.ti -1c
.RI "void \fBmodifFPS\fP (int x)"
.br
.RI "modifFPS : modifi les FPS "
.in -1c
.SS "Attributs publics"

.in +1c
.ti -1c
.RI "int \fBFPS\fP = 20"
.br
.ti -1c
.RI "QElapsedTimer \fBlastFrame\fP"
.br
.ti -1c
.RI "QElapsedTimer \fBabsoluteTime\fP"
.br
.ti -1c
.RI "double \fBdeltaTime\fP = 1"
.br
.in -1c
.SS "Fonctions membres protégées"

.in +1c
.ti -1c
.RI "void \fBmousePressEvent\fP (QMouseEvent *e) override"
.br
.RI "sauvegarde la position du clique de la souris "
.ti -1c
.RI "void \fBmouseReleaseEvent\fP (QMouseEvent *e) override"
.br
.ti -1c
.RI "void \fBtimerEvent\fP (QTimerEvent *e) override"
.br
.RI "[1] "
.ti -1c
.RI "void \fBinitializeGL\fP () override"
.br
.RI "[1] "
.ti -1c
.RI "void \fBresizeGL\fP (int w, int h) override"
.br
.RI "[4] "
.ti -1c
.RI "void \fBpaintGL\fP () override"
.br
.RI "[5] "
.ti -1c
.RI "void \fBinitShaders\fP ()"
.br
.RI "initialise le shader "
.ti -1c
.RI "void \fBinitTextures\fP ()"
.br
.RI "initialise la texture "
.ti -1c
.RI "\fBObject\fP * \fBaddGameObject\fP (QOpenGLShaderProgram *shad, \fBObject\fP *parent, \fBTransform\fP *t, \fBGeometryEngine\fP *mesh, \fBTransform\fP *anim, QOpenGLTexture *txtr)"
.br
.RI "ajoute un \fBGameObject\fP au graphe de scène "
.ti -1c
.RI "\fBObject\fP * \fBaddMobileObject\fP (QOpenGLShaderProgram *shad, \fBObject\fP *parent, \fBTransform\fP *t, \fBGeometryEngine\fP *mesh, \fBTransform\fP *anim, QOpenGLTexture *texture)"
.br
.RI "ajoute un MobileObject au graphe de scène "
.ti -1c
.RI "\fBObject\fP * \fBaddBillboardObject\fP (QOpenGLShaderProgram *shad, \fBObject\fP *parent, \fBTransform\fP *t, \fBGeometryEngine\fP *mesh, \fBTransform\fP *anim, QOpenGLTexture *txtr)"
.br
.RI "ajoute un addBillboardObject au graphe de scène "
.ti -1c
.RI "void \fBinitMonde\fP ()"
.br
.RI "initialise le monde "
.ti -1c
.RI "void \fBscene\fP ()"
.br
.RI "métode répertorient tout les objets du graphe de scène "
.in -1c
.SH "Description détaillée"
.PP 
la classe \fBMainWidget\fP est la classe principale qui contiens le graphe de scène et initialise la confiture 
.SH "Documentation des constructeurs et destructeur"
.PP 
.SS "MainWidget::MainWidget (QWidget * parent = \fC0\fP)\fC [explicit]\fP"

.PP
Constructeur\&. 
.PP
\fBParamètres\fP
.RS 4
\fIparent\fP 
.RE
.PP

.SH "Documentation des fonctions membres"
.PP 
.SS "\fBObject\fP * MainWidget::addBillboardObject (QOpenGLShaderProgram * shad, \fBObject\fP * parent, \fBTransform\fP * t, \fBGeometryEngine\fP * mesh = \fCnew \fBGeometryEngine\fP()\fP, \fBTransform\fP * anim = \fCnew \fBTransform\fP()\fP, QOpenGLTexture * texture = \fCNULL\fP)\fC [protected]\fP"

.PP
ajoute un addBillboardObject au graphe de scène 
.PP
\fBParamètres\fP
.RS 4
\fIshad\fP shader 
.br
\fIparent\fP gameobject parent 
.br
\fIt\fP transformation 
.br
\fImesh\fP geometry, pour gerer les maillages 
.br
\fIanim\fP tranformation pour l'animation 
.br
\fItexture\fP la textures 
.RE
.PP
\fBRenvoie\fP
.RS 4
.RE
.PP

.SS "\fBObject\fP * MainWidget::addGameObject (QOpenGLShaderProgram * shad, \fBObject\fP * parent, \fBTransform\fP * t, \fBGeometryEngine\fP * mesh = \fCnew \fBGeometryEngine\fP()\fP, \fBTransform\fP * anim = \fCnew \fBTransform\fP()\fP, QOpenGLTexture * texture = \fCNULL\fP)\fC [protected]\fP"

.PP
ajoute un \fBGameObject\fP au graphe de scène 
.PP
\fBParamètres\fP
.RS 4
\fIshad\fP shader 
.br
\fIparent\fP gameobject parent 
.br
\fIt\fP transformation 
.br
\fImesh\fP geometry, pour gerer les maillages 
.br
\fIanim\fP tranformation pour l'animation 
.br
\fItexture\fP la textures 
.RE
.PP
\fBRenvoie\fP
.RS 4
.RE
.PP

.SS "\fBObject\fP * MainWidget::addMobileObject (QOpenGLShaderProgram * shad, \fBObject\fP * parent, \fBTransform\fP * t, \fBGeometryEngine\fP * mesh = \fCnew \fBGeometryEngine\fP()\fP, \fBTransform\fP * anim = \fCnew \fBTransform\fP()\fP, QOpenGLTexture * texture = \fCNULL\fP)\fC [protected]\fP"

.PP
ajoute un MobileObject au graphe de scène 
.PP
\fBParamètres\fP
.RS 4
\fIshad\fP shader 
.br
\fIparent\fP gameobject parent 
.br
\fIt\fP transformation 
.br
\fImesh\fP geometry, pour gerer les maillages 
.br
\fIanim\fP tranformation pour l'animation 
.br
\fItexture\fP la textures 
.RE
.PP
\fBRenvoie\fP
.RS 4
.RE
.PP

.SS "void MainWidget::emitFilter (QEvent * event)\fC [signal]\fP"

.PP
emitFilter : signal qui avertit qu'une touche à été préssé ou relaché 
.PP
\fBParamètres\fP
.RS 4
\fIevent\fP 
.RE
.PP

.SS "void MainWidget::initializeGL ()\fC [override]\fP, \fC [protected]\fP"

.PP
[1] [2]
.PP
[2]
.SS "void MainWidget::initMonde ()\fC [protected]\fP"

.PP
initialise le monde initialise le graphe de scène avec le noeud monde 
.SS "void MainWidget::initShaders ()\fC [protected]\fP"

.PP
initialise le shader [3]
.PP
initShaders initialise tous les shaders 
.SS "void MainWidget::initTextures ()\fC [protected]\fP"

.PP
initialise la texture initTextures initialise toute les textures 
.SS "void MainWidget::keyPress (QKeyEvent * e)\fC [slot]\fP"

.PP
envois le signal \fBemitFilter()\fP 
.PP
\fBParamètres\fP
.RS 4
\fIe\fP 
.RE
.PP

.SS "void MainWidget::modifFPS (int x)"

.PP
modifFPS : modifi les FPS 
.PP
\fBParamètres\fP
.RS 4
\fIx\fP : nouvelle valeur des FPS 
.RE
.PP

.SS "void MainWidget::mousePressEvent (QMouseEvent * e)\fC [override]\fP, \fC [protected]\fP"

.PP
sauvegarde la position du clique de la souris [0]
.PP
\fBParamètres\fP
.RS 4
\fIe\fP : position 
.RE
.PP

.SS "void MainWidget::paintGL ()\fC [override]\fP, \fC [protected]\fP"

.PP
[5] [6]
.PP
view
.PP
[6]
.SS "void MainWidget::projectionChanged (QMatrix4x4 val)\fC [signal]\fP"

.PP
projectionChanged : c'est un signal qui avertit le slot connécté que la projection a changé 
.PP
\fBParamètres\fP
.RS 4
\fIval\fP 
.RE
.PP

.SS "void MainWidget::resizeGL (int w, int h)\fC [override]\fP, \fC [protected]\fP"

.PP
[4] [5] 
.SS "void MainWidget::scene ()\fC [protected]\fP"

.PP
métode répertorient tout les objets du graphe de scène Methode repertoriant tout les object du graphe de scène\&. 
.SS "void MainWidget::signalKeyPress (QKeyEvent * e)\fC [signal]\fP"

.PP
envois un signal lorsqu'une touche est préssée 
.PP
\fBParamètres\fP
.RS 4
\fIe\fP 
.RE
.PP


.SH "Auteur"
.PP 
Généré automatiquement par Doxygen pour Moteur De Jeu à partir du code source\&.
