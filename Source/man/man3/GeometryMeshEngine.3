.TH "GeometryMeshEngine" 3 "Mercredi 12 Janvier 2022" "Moteur De Jeu" \" -*- nroff -*-
.ad l
.nh
.SH NAME
GeometryMeshEngine \- la classe \fBGeometryMeshEngine\fP effectue toute les actions en rapport aux maillage importer  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <geometrymeshengine\&.h>\fP
.PP
Est dérivée de \fBGeometryEngine\fP\&.
.PP
Dérivée par \fBgeometryUI\fP\&.
.SS "Fonctions membres publiques"

.in +1c
.ti -1c
.RI "void \fBinitMesh\fP (std::string filename, bool collisionActivated=true, bool centre=false, bool inverse=false)"
.br
.RI "initMesh charge un fichier \&.off et appelle \fBbindMesh()\fP "
.ti -1c
.RI "void \fBinitMeshObj\fP (std::string filename, bool collisionActivated=true, bool centre=false, bool inverse=false)"
.br
.RI "initMeshObj charge un fichier \&.obj et appelle \fBbindMesh()\fP "
.ti -1c
.RI "void \fBbindMesh\fP (std::vector< std::vector< unsigned int > > faces, bool a=true, bool centre=false, bool inverse=false)"
.br
.RI "bindMesh, "
.ti -1c
.RI "void \fBdrawWithNormal\fP (QOpenGLShaderProgram *program)"
.br
.RI "\fBdrawCubeGeometry()\fP avec la normal en plus "
.ti -1c
.RI "void \fBdrawCubeGeometry\fP (QOpenGLShaderProgram *program) override"
.br
.RI "dessine la géométrie "
.ti -1c
.RI "QVector3D \fBsetNormalToCentreCircle\fP (QVector3D vec, QVector3D centre, bool inverse) override"
.br
.RI "virtual, voir \fBGeometryMeshEngine::setNormalToCentreCircle\fP "
.in -1c
.SS "Attributs publics"

.in +1c
.ti -1c
.RI "std::vector< QVector2D > \fBtextures\fP"
.br
.ti -1c
.RI "std::vector< std::vector< unsigned int > > \fBindicesTextures\fP"
.br
.in -1c
.SS "Membres hérités additionnels"
.SH "Description détaillée"
.PP 
la classe \fBGeometryMeshEngine\fP effectue toute les actions en rapport aux maillage importer 
.SH "Documentation des fonctions membres"
.PP 
.SS "void GeometryMeshEngine::bindMesh (std::vector< std::vector< unsigned int > > faces, bool a = \fCtrue\fP, bool centre = \fCfalse\fP, bool inverse = \fCfalse\fP)"

.PP
bindMesh, 
.PP
\fBParamètres\fP
.RS 4
\fIfaces\fP tableau des face de l'objet 
.br
\fIcentre\fP pour changer la direction des normals 
.br
\fIinverse\fP inverse la direction des normals 
.RE
.PP

.SS "void GeometryMeshEngine::drawCubeGeometry (QOpenGLShaderProgram * program)\fC [override]\fP, \fC [virtual]\fP"

.PP
dessine la géométrie 
.PP
\fBParamètres\fP
.RS 4
\fIprogram\fP 
.RE
.PP

.PP
Réimplémentée à partir de \fBGeometryEngine\fP\&.
.SS "void GeometryMeshEngine::drawWithNormal (QOpenGLShaderProgram * program)"

.PP
\fBdrawCubeGeometry()\fP avec la normal en plus 
.PP
\fBParamètres\fP
.RS 4
\fIprogram\fP 
.RE
.PP

.SS "void GeometryMeshEngine::initMesh (std::string filename, bool collisionActivated = \fCtrue\fP, bool centre = \fCfalse\fP, bool inverse = \fCfalse\fP)\fC [virtual]\fP"

.PP
initMesh charge un fichier \&.off et appelle \fBbindMesh()\fP 
.PP
\fBParamètres\fP
.RS 4
\fIfilename[in]\fP nom du fichier 
.br
\fIcollisionActivated[in]\fP bouleen determinant si l'objet subit les collisions 
.br
\fIcentre\fP boolean permet de modifier la direction de la normal ( pour les spheres) 
.br
\fIinverse\fP si centre a True, determine l'orientation de la normal 
.RE
.PP

.PP
Réimplémentée à partir de \fBGeometryEngine\fP\&.
.SS "void GeometryMeshEngine::initMeshObj (std::string filename, bool collisionActivated = \fCtrue\fP, bool centre = \fCfalse\fP, bool inverse = \fCfalse\fP)\fC [virtual]\fP"

.PP
initMeshObj charge un fichier \&.obj et appelle \fBbindMesh()\fP 
.PP
\fBParamètres\fP
.RS 4
\fIfilename\fP 
.br
\fIcollisionActivated\fP vrai si collision activé 
.br
\fIcentre\fP pour changer la direction des normals 
.br
\fIinverse\fP inverse la direction des normals 
.RE
.PP

.PP
Réimplémentée à partir de \fBGeometryEngine\fP\&.
.SS "QVector3D GeometryMeshEngine::setNormalToCentreCircle (QVector3D vec, QVector3D centre, bool inverse)\fC [override]\fP, \fC [virtual]\fP"

.PP
virtual, voir \fBGeometryMeshEngine::setNormalToCentreCircle\fP 
.PP
Réimplémentée à partir de \fBGeometryEngine\fP\&.

.SH "Auteur"
.PP 
Généré automatiquement par Doxygen pour Moteur De Jeu à partir du code source\&.
