.TH "BasicIO.h" 3 "Mercredi 12 Janvier 2022" "Moteur De Jeu" \" -*- nroff -*-
.ad l
.nh
.SH NAME
BasicIO.h \- librairie fournie afin de pouvoir lire un fichier\&. a été modifié afin de pouvoir lire un fichiers 'off' et des fichier 'obj' tout en récupérant les coordonnée de textures\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <vector>\fP
.br
\fC#include <string>\fP
.br
\fC#include <iostream>\fP
.br
\fC#include <fstream>\fP
.br
\fC#include <QString>\fP
.br
\fC#include <QStringList>\fP
.br
\fC#include <QFile>\fP
.br
\fC#include <QDataStream>\fP
.br
\fC#include <cfloat>\fP
.br
\fC#include <cmath>\fP
.br
\fC#include <cassert>\fP
.br
\fC#include <QTextStream>\fP
.br
\fC#include <QCoreApplication>\fP
.br
\fC#include <QDir>\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBGetCurrentDir\fP   getcwd"
.br
.in -1c
.SS "Fonctions"

.in +1c
.ti -1c
.RI "template<class point_t > point_t \fBOFFIO::max\fP (point_t BB, point_t pt)"
.br
.ti -1c
.RI "template<class point_t > point_t \fBOFFIO::min\fP (point_t BB, point_t pt)"
.br
.ti -1c
.RI "template<class point_t , class type_t > bool \fBOFFIO::open\fP (const std::string &filename, std::vector< point_t > &vertices, std::vector< std::vector< type_t > > &faces, bool convertToTriangles=true, bool randomize=false)"
.br
.ti -1c
.RI "template<class point_t , class type_t > bool \fBOFFIO::save\fP (const std::string &filename, std::vector< point_t > &vertices, std::vector< std::vector< type_t > > &faces)"
.br
.ti -1c
.RI "template<class point_t , class face_t > bool \fBOFFIO::saveFromMeshFormat\fP (const std::string &filename, const point_t *vertices, unsigned int n_vertices, const face_t *faces, unsigned int n_faces)"
.br
.ti -1c
.RI "template<class point_t > bool \fBOFFIO::open\fP (const std::string &filename, std::vector< point_t > &vertices)"
.br
.ti -1c
.RI "template<class point_t , class int_type_t > bool \fBOBJIO::open\fP (const std::string &filename, std::vector< point_t > &vertices, std::vector< std::vector< int_type_t > > &faces, bool convertToTriangles=true, bool randomize=false, bool convertEdgesToDegenerateTriangles=true)"
.br
.ti -1c
.RI "template<class point_t , class texture , class int_type_t > bool \fBOBJIO::open\fP (const std::string &filename, std::vector< point_t > &vertices, std::vector< std::vector< int_type_t > > &faces, std::vector< texture > &textures, std::vector< std::vector< int_type_t > > &indicetextures, bool convertToTriangles=true, bool randomize=false, bool convertEdgesToDegenerateTriangles=true)"
.br
.ti -1c
.RI "template<class point_t , class int_type_t > bool \fBOBJIO::open\fP (const std::string &filename, std::vector< point_t > &vertices, std::vector< std::vector< int_type_t > > &faces, std::vector< std::pair< int_type_t, int_type_t > > &additional_edges, bool convertToTriangles=true, bool randomize=false)"
.br
.ti -1c
.RI "template<class point_t > bool \fBOBJIO::open\fP (const std::string &filename, std::vector< point_t > &vertices)"
.br
.ti -1c
.RI "template<class point_t , typename int_t > bool \fBOBJIO::save\fP (std::string const &filename, std::vector< point_t > &verticesP, std::vector< std::vector< int_t > > &facesP)"
.br
.ti -1c
.RI "template<class point_t , class face_t , class edge_t > bool \fBOBJIO::saveFromMeshFormat\fP (const std::string &filename, const point_t *vertices, unsigned int n_vertices, const face_t *faces, unsigned int n_faces, const edge_t *edges, unsigned int n_edges)"
.br
.in -1c
.SH "Description détaillée"
.PP 
librairie fournie afin de pouvoir lire un fichier\&. a été modifié afin de pouvoir lire un fichiers 'off' et des fichier 'obj' tout en récupérant les coordonnée de textures\&. 


.SH "Documentation des fonctions"
.PP 
.SS "template<class point_t , class int_type_t > bool OBJIO::open (const std::string & filename, std::vector< point_t > & vertices, std::vector< std::vector< int_type_t > > & faces, bool convertToTriangles = \fCtrue\fP, bool randomize = \fCfalse\fP, bool convertEdgesToDegenerateTriangles = \fCtrue\fP)"
myfile\&.is_open())
.SS "template<class point_t , class texture , class int_type_t > bool OBJIO::open (const std::string & filename, std::vector< point_t > & vertices, std::vector< std::vector< int_type_t > > & faces, std::vector< texture > & textures, std::vector< std::vector< int_type_t > > & indicetextures, bool convertToTriangles = \fCtrue\fP, bool randomize = \fCfalse\fP, bool convertEdgesToDegenerateTriangles = \fCtrue\fP)"
myfile\&.is_open())
.SH "Auteur"
.PP 
Généré automatiquement par Doxygen pour Moteur De Jeu à partir du code source\&.
